#!/usr/bin/env bash
# https://gist.github.com/logarytm/26d11d9476757fe43a82959f5bc341b5
set -o errtrace
set -o functrace
set -o errexit
set -o nounset
set -o pipefail
export PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
# set -e


function finish() {
  local root="$1"
  root="$(realpath "$root")"
  if [ "x$(unlock)" != "x0" ]; then
    return 0
  else
    echo "Shutting down..."
  fi

  found=1
  while [ "x$found" = "x1" ]; do
    found=0
    for pid in $(ls -1 /proc); do
      link=$(readlink /proc/$pid/root || true)
      if [ "x$link" != "x" ]; then
        if [ "x${link:0:${#root}}" == "x$root" ]; then
          kill -9 $pid && echo "Killed process $pid" || true
          found=1
        fi
      fi
    done
  done

  # umount -v -l "$root"/tmp/.X11-unix || true
  # umount -v -l "$root"/dev || true
  # umount -v -l "$root"/proc || true
  # umount -v -l "$root"/sys || true
      local -r mounts=(
        "sys"
        "proc"
        "dev/pts"
        "dev"
    )
    for i in "${mounts[@]}"; do
        echo "unmounting $root/$i"
        umount -l -f -v  "$root/$i" || true
    done
    rm -v "$lockfile"
}

function lock() {
  local count
  count="$(cat "$lockfile" 2>/dev/null || echo 0)"
  echo $(expr "$count" + 1) > "$lockfile"
}

function unlock() {
  local count
  count="$(cat "$lockfile")"
  echo $(expr "$count" - 1) | tee "$lockfile"
}

root="$1"
lockfile="/tmp/chroot-lockfile"
shift
if [ "x" = "x$root" ] || ! [ -d "$root" ]; then
  printf "error: invalid chroot directory\n" >&2
  exit 1
fi

if [ $# = 0 ]; then
  printf "error: at least two arguments required" >&2
fi

trap finish EXIT
# lock
# mkdir -p "$root/tmp/.X11-unix"
# ln -sfv /tmp/.X11-unix "$root"/tmp/.X11-unix || echo "warning: X11 will not be available" >&2
# mount -v -t devtmpfs devtmpfs "$root"/dev || true
# mount -v --rbind /dev/pts "$root"/dev/pts || true
# mount -v -t proc proc "$root"/proc || true
# mount -v -t sysfs sysfs "$root"/sys || true
# chroot "$root" "$@" || exit 0
 